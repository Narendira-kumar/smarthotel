server.port=8080
server.servlet.context-path=/SmartHotelService
spring.application.name=SmartHotelService
spring.datasource.username=shp_dev
spring.datasource.password=shp_dev
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
logging.level.org.springframework=Debug

 
spring.datasource.url=jdbc:mysql://localhost:3306/shp

spring.jpa.hibernate.ddl-auto=none
#spring.batch.initialize-schema=always
spring.datasource.initialization-mode=always

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

eureka.client.serviceUrl.defaultZone= http://localhost:8761/eureka

server.error.include-message=always
server.error.include-binding-errors=always

management.security.enabled=false
management.endpoint.health.show-details=always
#management.trace.http.include=request-headers,response-headers
management.endpoints.web.exposure.include=*
#management.trace.http.enabled: true
management.endpoints.web.exposure.include=httptrace,health,logfile,mappings,loggers,beans,configprops


#zipkin default url
spring.zipkin.base-url=http://localhost:9411
#How sleuth sending information to zipkin
spring.zipkin.sender.type=web
#How much information to be sent to zipkins
spring.sleuth.sampler.probability=1

eureka.instance.prefer-ip-address=true
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}


userController.tags=User
userController.createUser.ApiOperation=Add a new account in user
userController.createuser.ApiOperation.Notes=This end point is used to create user account

userController.retrieveUser.ApiOperation=Retrieve the user based on the Id
userController.retrieveuser.ApiOperation.Notes=This end point is used to retrieve the user

userController.checkUser.ApiOperation=Check the user based on the Id
userController.checkuser.ApiOperation.Notes=This end point is used to check the user in user account

userController.userEmailDetails.ApiOperation=Get the Email details based on the Id
userController.useremaildetails.ApiOperation.Notes=This end point is used to get the user email in user account

userRoomController.tags=UserRoom
userRoomController.createLogin.ApiOperation=Register the Login and Password for user
userRoomController.createlogin.ApiOperation.Notes=This end point is to register the Login and Password for user account
 
userRoomController.sendOTP.ApiOperation=Sent the OTP number to registered Email Id 
userRoomController.sendopt.ApiOperation.Notes=This end point is to Sent the OTP number to registered Email Id 

 
userRoomController.updateRoomDetails.ApiOperation=Update the Room Id after Room is block in Room Microservice 
userRoomController.updateroomdetails.ApiOperation.Notes=This end point is to Update the Room Id after Room is block in Room Microservice 

 
userRoomController.roomEntry.ApiOperation=RoomEntry using User OTP  
userRoomController.roomentry.ApiOperation.Notes=This end point is to entry the Room using User OTP  

userRoomController.roomExit.ApiOperation=RoomExit using User OTP  
userRoomController.roomexit.ApiOperation.Notes=This end point is to exit the Room using User OTP 
 